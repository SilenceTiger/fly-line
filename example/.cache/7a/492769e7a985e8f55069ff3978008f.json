{"id":"node_modules/d3-array/src/merge.js","dependencies":[{"name":"E:\\my_github\\fly-line\\example\\package.json","includedInParent":true,"mtime":1631862381969},{"name":"E:\\my_github\\fly-line\\example\\node_modules\\d3-array\\package.json","includedInParent":true,"mtime":1631521255836}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\n\nvar _marked =\n/*#__PURE__*/\nregeneratorRuntime.mark(flatten);\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction flatten(arrays) {\n  var _iterator, _step, array;\n\n  return regeneratorRuntime.wrap(function flatten$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _iterator = _createForOfIteratorHelper(arrays);\n          _context.prev = 1;\n\n          _iterator.s();\n\n        case 3:\n          if ((_step = _iterator.n()).done) {\n            _context.next = 8;\n            break;\n          }\n\n          array = _step.value;\n          return _context.delegateYield(array, \"t0\", 6);\n\n        case 6:\n          _context.next = 3;\n          break;\n\n        case 8:\n          _context.next = 13;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t1 = _context[\"catch\"](1);\n\n          _iterator.e(_context.t1);\n\n        case 13:\n          _context.prev = 13;\n\n          _iterator.f();\n\n          return _context.finish(13);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 10, 13, 16]]);\n}\n\nfunction merge(arrays) {\n  return Array.from(flatten(arrays));\n}"},"sourceMaps":{"js":{"mappings":[{"name":"flatten","generated":{"line":10,"column":24},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":10}},{"generated":{"line":18,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"name":"flatten","generated":{"line":18,"column":9},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":10}},{"generated":{"line":18,"column":16},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"name":"arrays","generated":{"line":18,"column":17},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":18}},{"generated":{"line":18,"column":23},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"name":"arrays","generated":{"line":25,"column":49},"source":"node_modules/d3-array/src/merge.js","original":{"line":2,"column":22}},{"generated":{"line":25,"column":55},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"name":"array","generated":{"line":36,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":2,"column":13}},{"name":"array","generated":{"line":36,"column":10},"source":"node_modules/d3-array/src/merge.js","original":{"line":2,"column":13}},{"generated":{"line":36,"column":15},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":3,"column":4}},{"name":"array","generated":{"line":37,"column":40},"source":"node_modules/d3-array/src/merge.js","original":{"line":3,"column":11}},{"generated":{"line":37,"column":45},"source":"node_modules/d3-array/src/merge.js","original":{"line":3,"column":4}},{"generated":{"line":39,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":56,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":58,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":60,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":61,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":62,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":63,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":64,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":65,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":66,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":1,"column":0}},{"generated":{"line":68,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":7,"column":15}},{"name":"merge","generated":{"line":68,"column":9},"source":"node_modules/d3-array/src/merge.js","original":{"line":7,"column":24}},{"generated":{"line":68,"column":14},"source":"node_modules/d3-array/src/merge.js","original":{"line":7,"column":15}},{"name":"arrays","generated":{"line":68,"column":15},"source":"node_modules/d3-array/src/merge.js","original":{"line":7,"column":30}},{"generated":{"line":68,"column":21},"source":"node_modules/d3-array/src/merge.js","original":{"line":7,"column":15}},{"generated":{"line":68,"column":23},"source":"node_modules/d3-array/src/merge.js","original":{"line":7,"column":38}},{"generated":{"line":69,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":8,"column":2}},{"name":"Array","generated":{"line":69,"column":9},"source":"node_modules/d3-array/src/merge.js","original":{"line":8,"column":9}},{"generated":{"line":69,"column":14},"source":"node_modules/d3-array/src/merge.js","original":{"line":8,"column":14}},{"name":"from","generated":{"line":69,"column":15},"source":"node_modules/d3-array/src/merge.js","original":{"line":8,"column":15}},{"generated":{"line":69,"column":19},"source":"node_modules/d3-array/src/merge.js","original":{"line":8,"column":9}},{"name":"flatten","generated":{"line":69,"column":20},"source":"node_modules/d3-array/src/merge.js","original":{"line":8,"column":20}},{"generated":{"line":69,"column":27},"source":"node_modules/d3-array/src/merge.js","original":{"line":8,"column":27}},{"name":"arrays","generated":{"line":69,"column":28},"source":"node_modules/d3-array/src/merge.js","original":{"line":8,"column":28}},{"generated":{"line":69,"column":34},"source":"node_modules/d3-array/src/merge.js","original":{"line":8,"column":27}},{"generated":{"line":69,"column":35},"source":"node_modules/d3-array/src/merge.js","original":{"line":8,"column":9}},{"generated":{"line":69,"column":36},"source":"node_modules/d3-array/src/merge.js","original":{"line":8,"column":2}},{"generated":{"line":70,"column":0},"source":"node_modules/d3-array/src/merge.js","original":{"line":9,"column":1}}],"sources":{"node_modules/d3-array/src/merge.js":"function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n"},"lineCount":null}},"error":null,"hash":"930bdaf8923594da805518a6e8f74a98","cacheData":{"env":{}}}